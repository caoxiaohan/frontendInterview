@startuml ../../../styles/images/modules/transactions/addTransaction-activity.png
skinparam BorderColor #blue\9932CC
skinparam backgroundcolor AntiqueWhite/white

title
生成交易数据流程图

end title

footer copyright (c) imfly 2016.07.05 http://ebookchain.org
header 《Nodejs开发加密货币》分析用图：《交易》

' shared.addTransactions()代码逻辑

(*)--> [新建交易] "put /api/transactions/" as inputForm
note left: 代码在shared.addTransactions()方法里

partition "1.生成交易数据" {
    --> library.scheme.validate()
    note left
    "基本验证：确保人为输入的信息正确。
    必须字段：secret, amount, recipientId"
    end note
    if "是否符合字段要求" then
    --> [no] "返回错误信息" as return_error_msg
    -left-> [停在表单页面，要求用户重新填写] inputForm
    else
    --> [yes] "生成公钥keypair.publicKey"
    --> 验证密码信息
        if "重新生成的公钥与提供的一致？" then
        --> return_error_msg
        else
        partition "验证乙方（接收方）用户合法性" {
          --> [yes] "乙方地址转换"
          note top: "别名地址与字符串地址同等作用"
            if "查询到用户？" then
            --> [no] return_error_msg
        }
            else
                partition "验证甲方（发送方）用户合法性" {
                    if "提供了多重签名公钥（multisigAccountPublicKey）？" then
                        partition "验证多重签名" {
                          --> [yes] "通过多重签名公钥查询用户！"
                          if "帐号和其公钥存在？" then
                          --> [no] return_error_msg
                          else
                              if "帐号和其多重帐号字段存在？" then
                              --> [no] return_error_msg
                              else
                                if "多重帐号字段包含甲方公钥？" then
                                --> [no] return_error_msg
                                else
                                --> [yes] ==verify_account==
                                endif
                              endif

                          endif
                        }
                    else
                    --> [no] ==verify_account==
                        if "使用甲方公钥查询用户？" then
                        --> [no] return_error_msg
                        else
                            if "用户有支付密码而未提供？" then
                            --> [no] return_error_msg
                            else
                            --> [yes] "整理请求者（这里是甲方）二次签名字段"
                            note right
                            如果提供了多重签名，应该首先验证
                            多重帐号与甲方帐号是否相同
                            end note
                            endif
                        endif
                    endif
                }
            endif
        endif
    endif
}
--> "2.给合法交易签名"
--> "3.验证交易合法性"
--> "4.广播到点对点网络"

--> (*)
@enduml
