@startuml ../../../styles/images/modules/database/database-all.png
skinparam BorderColor #blue\9932CC
skinparam backgroundcolor AntiqueWhite/white

title
数据库表格关联图

end title
footer copyright (c) imfly 2016.03.08 http://bitcoin-on-nodejs.ebookchain.org
header 《Nodejs开发加密货币》分析用图

' modules/Peer.js
package Datebase <<Database>> {
  Class blocks {
    + id: VARCHAR PRIMARY KEY
    + version: INT
    + timestamp: INT
    + height: INT
    + previousBlock: VARCHAR FOREIGN KEY
    + numberOfTransactions: INT
    + totalAmount: BIGINT
    + totalFee: BIGINT
    + reward: BIGINT
    + payloadLength: INT
    + payloadHash: BINARY
    + generatorPublicKey: BINARY
    + blockSignature: BINARY
  }

  Class trs {
    +id: VARCHAR PRIMARY KEY
    +blockId: VARCHAR FOREIGN KEY
    +type: TINYINT
    +timestamp: INT
    +senderPublicKey: BINARY
    +senderId: VARCHAR
    +recipientId: VARCHAR
    +senderUsername: VARCHAR
    +recipientUsername: VARCHAR
    +amount: BIGINT
    +fee: BIGINT
    +signature: BINARY
    +signSignature: BINARY
    +requesterPublicKey: BINARY
    +signatures: TEXT
  }

  Class signatures {
    +transactionId: VARCHAR FOREIGN KEY
    +publicKey: BINARY
  }

  Class delegates {
    +username: VARCHAR
    +transactionId: VARCHAR FOREIGN KEY
  }

  Class votes {
    +votes: TEXT
    +transactionId: VARCHAR FOREIGN KEY
  }

  Class usernames {
    +username: VARCHAR
    +transactionId: VARCHAR FOREIGN KEY
  }

  Class contacts{
    +address: VARCHAR
    +transactionId: VARCHAR FOREIGN KEY
  }

  Class forks_stat {
    +delegatePublicKey: BINARY
    +blockTimestamp: INT
    +blockId: VARCHAR
    +blockHeight: INT
    +previousBlock: VARCHAR
    +cause: INT
  }

  Class multisignatures{
    +min: INT
    +lifetime: INT
    +keysgroup: TEXT
    +transactionId: VARCHAR FOREIGN KEY
  }

  Class dapps{
    +transactionId: VARCHAR FOREIGN KEY
    +name: VARCHAR
    +description: VARCHARH
    +tags: VARCHARH
    +siaAscii: TEXT
    +siaIcon: TEXT
    +git: TEXT
    +type: INTEGER
    +category: INTEGER
    +icon: TEXT
  }

  Class intransfer{
    +dappId: VARCHAR
    +transactionId: VARCHAR FOREIGN KEY
  }

  Class sia_peers{
    +ip: INTEGER
    +port: TINYINT
    +outtransfer
    +transactionId: VARCHAR
    +dappId: VARCHAR
    +outTransactionId: VARCHAR
  }

  Class peers{
    +id: INTEGER
    +ip: INTEGER
    +port: TINYINT
    +state: TINYINT
    +os: VARCHAR
    +sharePort: TINYINT
    +version: VARCHAR
    +clock: INT
  }

  Class peers_dapp{
    +peerId: INT
    +dappid: VARCHAR
  }

  ' mem
  Class mem_round {
    + address: String
    + amount: BigInt
    + delegate: String
    + blockId: String
    + round: BigInt
  }

  Class mem_accounts {
    + username: String
    + isDelegate: BigInt
    + u_isDelegate: BigInt
    + secondSignature: BigInt
    + u_secondSignature: BigInt
    + u_username: String
    + address: String
    + publicKey: Binary
    + secondPublicKey: Binary
    + balance: BigInt
    + u_balance: BigInt
    + vote: BigInt
    + rate: BigInt
    + delegates: Text
    + contacts: Text
    + followers: Text
    + u_delegates: Text
    + u_contacts: Text
    + u_followers: Text
    + multisignatures: Text
    + u_multisignatures: Text
    + multimin: BigInt
    + u_multimin: BigInt
    + multilifetime: BigInt
    + u_multilifetime: BigInt
    + blockId: String
    + nameexist: Boolean
    + u_nameexist: Boolean
    + producedblocks: BigInt
    + missedblocks: BigInt
    + virgin: Boolean
    + fees: BigInt
    + rewards: BigInt
  }

  Class mem_accounts2delegates {
    + accountId: String
    + dependentId: String
  }

  Class mem_accounts2contacts {
    + accountId: String
    + dependentId: String
  }

  Class mem_accounts2u_delegates {
    + accountId: String
    + dependentId: String
  }

  Class mem_accounts2u_contacts {
    + accountId: String
    + dependentId: String
  }

  Class mem_accounts2multisignatures {
    + accountId: String
    + dependentId: String
  }

  Class mem_accounts2u_multisignatures {
    + accountId: String
    + dependentId: String
  }

  ' relationship
    mem_accounts "1" <-left-* "*" mem_accounts2delegates: accountId
    mem_accounts "1" <-down-* "*" mem_accounts2contacts: accountId
    mem_accounts "1" <-down-* "*" mem_accounts2u_delegates: accountId
    mem_accounts "1" <-right-* "*" mem_accounts2u_contacts: accountId
    mem_accounts "1" <-up-* "*" mem_accounts2multisignatures: accountId
    mem_accounts "1" <-up-* "*" mem_accounts2u_multisignatures: accountId

  ' relationship
    blocks "1" *-> "1" blocks: previousBlock
    trs "0..*" *-left-> "1" blocks: blockId
    forks_stat "*" *-down-> "1" blocks: blockId
    forks_stat "1" *-down-> "1" blocks: previousBlock
    signatures "1" *-up-> "1" trs: transactionId
    delegates "*" *-up-> "1" trs: transactionId
    votes "*" *-up-> "1" trs: transactionId
    usernames "*" *-up-> "1" trs: transactionId
    contacts "*" *-down-> "1" trs: transactionId
    multisignatures "*" *-down-> "1" trs: transactionId
    dapps "*" *-left-> "1" trs: transactionId
    intransfer "*" *-down-> "1" trs: transactionId
    sia_peers  "*" *-down-> "1" trs: transactionId
    intransfer "*" *-up-> "1" dapps: dappId
    sia_peers  "*" *-down-> "1" dapps: dappId
    peers "1" <-up-* "*" peers_dapp: peerId
    dapps "1" <-down-* "*" peers_dapp: dappid
    peers "*" *-left-* "*" dapps
}
@enduml
